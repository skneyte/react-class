{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAETC,EAFS,iDAEuCC,UAAUH,GAFjD,+DAGII,MAAOF,GAHX,cAGTG,EAHS,gBAIQA,EAAKC,OAJb,uBAIPC,EAJO,EAIPA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV3B,kBAeRM,GAfQ,4CAAH,sDCDb,IAAMO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECD1B,SAAuBA,GAAY,IAAD,EAEnBd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJgC,mBAEtCC,EAFsC,KAE/BC,EAF+B,KAuB7C,OAhBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAECC,QAAQC,IAAIF,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAM1B,CAACpB,IAEGqB,EDnBwBO,CAAc5B,GAAjCa,EAHyB,EAG9BN,KAAaa,EAHiB,EAGjBA,QAUpB,OARAM,QAAQC,IAAIP,GASR,oCACI,gCAAOpB,EAAP,KAEEoB,GAAW,sCAEb,yBAAKJ,UAAU,aAIHH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAmB,IAAKnB,EAAIC,IACJD,UE3BpBoB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,cAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAS9B,OACI,6BACI,6CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAIA,4BAEQ8C,EAAWtB,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACA6B,IAAM7B,EACNA,SAAWA,U,MCpBjCgC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.859a5b05.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategories( cats => [ inputValue, ...cats] );\r\n            setinputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n   \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=mmlv3Mk7xz8wIgtzldF0qL3xaOykCbo2`;\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map( img =>{\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        } )\r\n\r\n       \r\n        return gifs;\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    // console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__wobble\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\n import { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    console.log(loading);\r\n\r\n    \r\n\r\n    \r\n\r\n    // getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            { loading && <p>Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n            \r\n                    {\r\n                        images.map( img =>(\r\n                            <GifGridItem \r\n                            key={img.id}\r\n                            { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n                \r\n            </div> \r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport default function useFetchGifs( category ) {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n        \r\n        getGifs( category )\r\n            .then( imgs=>{\r\n                //setTimeout( ()=>{\r\n                    console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n              //  }, 3000);\r\n                \r\n            } )\r\n\r\n    }, [category])\r\n        \r\n    return state; // {data: [], loading: true };\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories(['HunterxHunter',...categories] );\r\n    // }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n            \r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category =>\r\n                      <GifGrid \r\n                      key={ category }\r\n                      category={ category } \r\n                      />\r\n                    )  \r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}